#!/usr/bin/python
import csv, json, os, random, re, sys, time, redis, tweepy, getpass
import configparser
from elasticsearch import Elasticsearch
from elasticsearch_dsl import Search
from walrus import *
import psutil, getpass, setproctitle, platform
import logging, logging.handlers
from time import gmtime, strftime
import ssl
from elasticsearch.connection import create_ssl_context

def elog(scname,mesg):
        mydate = str(datetime.datetime.utcnow())
        ebod = "{ \"index\" : { \"_index\" : \"perflog\", \"_type\" : \"perfdata\"} }\n"
        ebod = ebod + "{\"host\" : \"" + platform.node() + "\", \"shell\" : \"" + getpass.getuser() + "\", \"screen_name\" : \"" 
        ebod = ebod + scname + "\", \"event\" : \"" + mesg + "\" , \"date\" : \"" + mydate + "\"}\n"
	#print(ebod)
        try:
                client.bulk(body=ebod)
        except(RuntimeError, TypeError, NameError):
                pass


def check_resources():
	# make sure prior instance has exited
	for p in psutil.process_iter(attrs=['name', 'username']):
		if (p.info['username'] == getpass.getuser()) and (p.info['name'] == "follow" +getpass.getuser()):
			elog("FAIL", "already running")
			sys.exit()

	setproctitle.setproctitle("follow" + getpass.getuser())

	i = 0
	while (i < 30):
		zcpu = psutil.cpu_percent(interval=None, percpu=False)
		zmem = psutil.virtual_memory()[2]
		if (zcpu < 75) and (zmem < 92):
			i = 60
		i = i + 2
		time.sleep(2)

	#i < 60, don't have resources
	if (i  < 60):
		print()
		elog("FAIL","zcpu " + str(zcpu) + " zmem " + str(zmem))
		sys.exit()
	else:
		print("")
		#elog(getpass.getuser(),"sufficient resources to run")




# main begin
config = configparser.ConfigParser()
config.read(os.environ['HOME'] +'/.twitter')

# check_resources
check_resources()

auth = tweepy.OAuthHandler(config['API']['consumer_key'], config['API']['consumer_secret'])
auth.set_access_token(config['API']['access_token_key'], config['API']['access_token_secret'])
api = tweepy.API(auth)
my = api.verify_credentials()


ssl_context = create_ssl_context(cafile='/home/root-ca.pem')
ssl_context.check_hostname = False
ssl_context.verify_mode = ssl.CERT_NONE

client = Elasticsearch('https://hp0.netwarsystem.com:9200', ssl_context=ssl_context, timeout=60, http_auth=("admin", "LongPassword2019"))

wal = Walrus(host='localhost', port=6379, db=0)
adds = wal.Set(getpass.getuser() + "adds")
work = wal.Set(getpass.getuser() + "work")
seen = wal.Set(getpass.getuser() + "seen")



try:
#	y = api.get_user(nextid)
	if y:
		twbod = "{ \"index\" : { \"_index\" : \"tumaster\", \"_type\" : \"twid\", \"_id\" : \"" + y.id_str + "\" }\n"
		twbod = twbod + json.dumps(y._json)
		client.bulk(index="tumaster",doc_type="twid",body=twbod)
except (RuntimeError, TypeError, NameError):
	print("tumaster failed")
	pass
