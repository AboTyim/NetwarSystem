#!/usr/bin/python
import csv, json, os, random, re, sys, time, redis, tweepy, getpass
import configparser
from elasticsearch import Elasticsearch
from elasticsearch_dsl import Search
import ssl
from elasticsearch.connection import create_ssl_context
from textblob import TextBlob
import squish2, requests

#urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
requests.packages.urllib3.disable_warnings()

config = configparser.ConfigParser()
config.read(os.environ['HOME'] +'/.twitter')

if(config['STREAM']['elksg'][:5] == "https"):
	try:
		ssl_context = create_ssl_context(cafile='/home/root-ca.pem')
		ssl_context.check_hostname = False
		ssl_context.verify_mode = ssl.CERT_NONE
		client = Elasticsearch(config['STREAM']['elksg'], ssl_context=ssl_context, timeout=60, http_auth=(config['STREAM']['elksguser'], config['STREAM']['elksgpass']))
	except:
		sys.exit()
else:
	client = Elasticsearch(config['STREAM']['elksg'])


s = Search(using=client, index=sys.argv[1]).query("match",id_str=sys.argv[2])
response = s.execute()
if(response):
	for resp in response:
		print(resp['text'])
		blob = TextBlob(resp['text'])
		print(blob.tags)
		print(blob.noun_phrases)
		for sentence in blob.sentences:
			print(sentence.sentiment.polarity)

else:
	print(sys.argv[2] + " not found")
