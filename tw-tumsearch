#!/usr/bin/python
import csv, json, os, random, re, sys, time, redis, tweepy, getpass
import configparser
from elasticsearch import Elasticsearch
from elasticsearch_dsl import Search
import ssl, requests
from elasticsearch.connection import create_ssl_context
from urllib3.exceptions import ProtocolError

#urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
requests.packages.urllib3.disable_warnings()

config = configparser.ConfigParser()
config.read(os.environ['HOME'] +'/.twitter')


if(config['STREAM']['elksg'][:5] == "https"):
	try:
		ssl_context = create_ssl_context(cafile='/home/root-ca.pem')
		ssl_context.check_hostname = False
		ssl_context.verify_mode = ssl.CERT_NONE
		client = Elasticsearch(config['STREAM']['elksg'], ssl_context=ssl_context, timeout=60, http_auth=(config['STREAM']['elksguser'], config['STREAM']['elksgpass']))
	except:
		sys.exit()
else:
	client = Elasticsearch(config['STREAM']['elksg'])

found = open(sys.argv[1] + "-found.txt", 'w')
missd = open(sys.argv[1] + "-missed.txt", 'w')
accts = open(sys.argv[1], 'r')
for acct in accts:
	acct = acct.rstrip()
	s = Search(using=client, index="usertest").query("match",id_str=acct)
	response = s.execute()
	if(response):
		for resp in response:
			print(resp['screen_name'])
			found.write(resp['screen_name'] + "\n")
	else:
		print(acct)
		missd.write(str(acct) + "\n")


