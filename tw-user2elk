#!/usr/bin/python
import tweepy
import os, sys, json, time
import configparser
from elasticsearch import Elasticsearch
import ssl
from elasticsearch.connection import create_ssl_context

config = configparser.ConfigParser()
config.read(os.environ['HOME'] +'/.twitter')

auth = tweepy.OAuthHandler(config['API']['consumer_key'], config['API']['consumer_secret'])
auth.set_access_token(config['API']['access_token_key'], config['API']['access_token_secret'])
api = tweepy.API(auth)

ssl_context = create_ssl_context(cafile='/home/root-ca.pem')
ssl_context.check_hostname = False
ssl_context.verify_mode = ssl.CERT_NONE
client = Elasticsearch('https://hp0.netwarsystem.com:9200', ssl_context=ssl_context, timeout=60, http_auth=("admin", "admin"))


infile = open(os.environ['HOME'] + '/' + sys.argv[1] , 'r')
twbod = ""
cnt = 0
for line in infile:
	try:
		y = api.get_user(line.rstrip())
		if y:
			print(line)
			twbod = twbod + "{ \"index\" : { \"_index\" : \"tumaster2\", \"_type\" : \"twid\", \"_id\" : \"" + y.id_str + "\" }\n"
			twbod = twbod + json.dumps(y._json) + "\n"
			cnt = cnt + 1
			print("cnt: " + str(cnt))
	except (RuntimeError, TypeError, NameError, tweepy.error.TweepError):
		pass
	if(cnt > 99):
		client.bulk(index="tumaster2",doc_type="twid",body=twbod)
		twbod = ""
		cnt = 0
		try:
			zod = api.rate_limit_status()
			#/users/show/:id
			while(zod['resources']['users']['/users/show/:id']['remaining'] < 100):
				print("waiting to recharge " + str(zod['resources']['users']['/users/show/:id']['remaining']))
				time.sleep(60)
				zod = api.rate_limit_status()
		except (RuntimeError, TypeError, NameError):
			pass
	

infile.close()
